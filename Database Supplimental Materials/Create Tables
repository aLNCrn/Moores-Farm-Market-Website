CREATE TABLE CUSTOMERS ( 
CustomerID INT  AUTO_INCREMENT, 
FirstName VARCHAR(50) NOT NULL, 
LastName VARCHAR(50) NOT NULL, 
Email VARCHAR(100) UNIQUE NOT NULL, 
Password VARCHAR(30) NOT NULL, 
PRIMARY KEY (CustomerID)
);




CREATE TABLE FAVORITES(
CustomerID INT NOT NULL,
ProductID INT NOT NULL,
PRIMARY KEY (CustomerID, ProductID), 
FOREIGN KEY (CustomerID) REFERENCES CUSTOMERS(CustomerID) ON DELETE CASCADE,
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID) ON DELETE CASCADE
);




CREATE TABLE REVIEWS (
    ReviewID INT AUTO_INCREMENT,  
    CustomerID INT,                            
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    ReviewText VARCHAR(300),                           
    ReviewDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    PRIMARY KEY(ReviewID),
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMERS(CustomerID) ON DELETE CASCADE
);

CREATE TABLE EMPLOYEES (
    EmployeeID INT AUTO_INCREMENT,      
    FirstName VARCHAR(100) NOT NULL,                
    LastName VARCHAR(100) NOT NULL,                 
    Email VARCHAR(100) ,             
    Phone VARCHAR(15),                              
    HireDate DATE,    
    Wage VARCHAR(6),
    PRIMARY KEY (EmployeeID)                                        
);

ALTER TABLE employees
ADD COLUMN password VARCHAR(255) NOT NULL,
ADD COLUMN position ENUM('admin', 'employee') NOT NULL;






Create Table PRODUCTS( 

ProductID INT AUTO_INCREMENT,
Name VARCHAR(255) NOT NULL,
Price VARCHAR(50) ,
CurrentlyAvailable BOOLEAN NOT NULL DEFAULT TRUE,
Imagelink varchar(255),
PRIMARY KEY (ProductID)
 
);

Create Table FLOWERS(
ProductID INT,
Annual VARCHAR(50) DEFAULT NULL,  
SunOrShade VARCHAR(20) DEFAULT NULL,  
PRIMARY KEY (ProductID),
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID)


);

Create Table PRODUCE (
ProductID INT ,
StorageInstructions VARCHAR(255) DEFAULT NULL,  
Type ENUM('Fruit', 'Vegetable') NOT NULL,
Location VARCHAR (16) DEFAULT NULL,
PRIMARY KEY (ProductID),
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID)

);



Create Table HONEY (
ProductID INT ,
Source VARCHAR(50) DEFAULT NULL,  
Raw BOOLEAN DEFAULT NULL,  
PRIMARY KEY (ProductID),
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID)

);

Create Table Seasonal (
ProductID INT ,
Season VARCHAR(40) DEFAULT NULL,
PRIMARY KEY (ProductID),
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID)

);

Create Table VegetablePlant (
ProductID INT,
Season VARCHAR(40) DEFAULT NULL,
PlantType ENUM('Vine', 'Stalk','Squash', 'Lettuce'),
PRIMARY KEY (ProductID),
FOREIGN KEY (ProductID) REFERENCES PRODUCTS(ProductID)

);

CREATE TABLE EmployeeSchedule (
    ShiftID INT PRIMARY KEY AUTO_INCREMENT,
    EmployeeID INT NOT NULL,
    Year INT NOT NULL CHECK (Year >= 2000),  
    Month INT NOT NULL CHECK (Month BETWEEN 1 AND 12),  
    Day INT NOT NULL CHECK (Day BETWEEN 1 AND 31),  
    TimeIn TIME NOT NULL,
    TimeOut TIME NOT NULL,
    FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEES(EmployeeID) ON DELETE CASCADE 
);

ALTER TABLE EmployeeSchedule
MODIFY COLUMN TimeIn TIME(0) NOT NULL,
MODIFY COLUMN TimeOut TIME(0) NOT NULL;

CREATE TABLE TIME_OFF_REQUESTS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    employee_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    reason TEXT,
    status VARCHAR(20) DEFAULT 'Pending',
    request_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (employeeid) REFERENCES EMPLOYEES(employeeid)
);

-- Drop the existing foreign key (if it exists)
ALTER TABLE TIME_OFF_REQUESTS
DROP FOREIGN KEY time_off_requests_ibfk_1;

-- Drop the old emp_id column (if it exists)
ALTER TABLE TIME_OFF_REQUESTS
DROP COLUMN employee_id;

-- Add the correct emp_id column
ALTER TABLE TIME_OFF_REQUESTS
ADD COLUMN employee_id INT NOT NULL;

-- Add the foreign key constraint referencing EmployeeID in the EMPLOYEES table
ALTER TABLE TIME_OFF_REQUESTS
ADD CONSTRAINT fk_emplyee_id FOREIGN KEY (employee_id) REFERENCES EMPLOYEES(EmployeeID);
